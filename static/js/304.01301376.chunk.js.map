{"version":3,"file":"static/js/304.01301376.chunk.js","mappings":"qSAEaA,EAAOC,EAAAA,GAAAA,GAAH,qZAgBJC,EAAYD,EAAAA,GAAAA,QAAH,oMASTE,EAAQF,EAAAA,GAAAA,IAAH,2NAULG,EAAOH,EAAAA,GAAAA,IAAH,mJAOJI,EAAWJ,EAAAA,GAAAA,GAAH,2TAWRK,EAAkBL,EAAAA,GAAAA,IAAH,gJAQfM,EAAON,EAAAA,GAAAA,EAAH,gNAUJO,EAAUP,EAAAA,GAAAA,EAAH,+MAUPQ,EAAcR,EAAAA,GAAAA,MAAH,6aAoBXS,EAAcT,EAAAA,GAAAA,MAAH,2CAIXU,EAAcV,EAAAA,GAAAA,IAAH,oL,SC9BxB,EAtDa,WACT,OAAgCW,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,KAAqBC,MAAK,SAAAC,GAAG,OAAIN,EAAYM,EAAhB,GAChC,GAAC,IAGF,IAAMC,GAAY,OAAIR,GAAUS,MAAK,SAACC,EAAWC,GAAZ,OAA2BD,EAAUE,KAAKC,cAAcF,EAAWC,KAAnE,IAErC,OAEI,2BACI,UAACvB,EAAD,YACI,SAACE,EAAD,CACIuB,IAAKC,EACLC,IAAI,YAER,SAAClB,EAAD,CACIgB,IAAKG,EACLD,IAAI,aAGR,UAACpB,EAAD,YACI,SAAC,MAAD,CAAiBsB,KAAM,MACvB,SAACrB,EAAD,CACIsB,YAAY,oBACZC,KAAK,OACLR,KAAK,cAGhBZ,EAASqB,OAAS,GACd,SAAClC,EAAD,UACIqB,EAAUc,KACP,gBAAGC,EAAH,EAAGA,GAAIX,EAAP,EAAOA,KAAMY,EAAb,EAAaA,QAASC,EAAtB,EAAsBA,MAAtB,OAEI,SAACjC,EAAD,WACI,UAAC,KAAD,CAAMkC,GAAE,UAAKH,GAAMI,MAAO,CAAEC,KAAM1B,GAAlC,WACI,SAACZ,EAAD,CAAOwB,IAAKW,EAAOT,IAAKJ,KACxB,UAACnB,EAAD,YACI,SAACC,EAAD,UAAOkB,KACP,SAACjB,EAAD,UAAU6B,WALPD,EAFnB,OAaO,0CAK9B,C,qHCrEM,SAAelB,EAAtB,+CAAO,OAAP,oBAAO,WAAkCwB,GAAlC,kGAEwBC,EAAAA,EAAAA,IAAU,6CAFlC,cAEOC,EAFP,gBAGwBA,EAASC,KAAKC,QAHtC,cAGOjC,EAHP,yBAIQA,GAJR,yCAMCkC,QAAQC,MAAR,MAND,oGAWA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCb,GAAjC,gGAEwBO,EAAAA,EAAAA,IAAA,oDAAuDP,IAF/E,cAEOQ,EAFP,yBAIQA,GAJR,uCAMCG,QAAQC,MAAR,MAND,mG","sources":["pages/Home/Home.styled.js","pages/Home/Home.jsx","servises/Fetch.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const List = styled.ul`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 24px;\n\n    @media screen and (min-width: 1440px) {\n        max-width: 1020px;\n        display: grid;\n        grid-template-columns: repeat(4, 1fr);\n        grid-template-rows: repeat(2, 1fr);\n        grid-column-gap: 20px;\n        grid-row-gap: 24px;\n    }\n`;\nexport const Container = styled.section`\n    display: flex;\n    flex-direction: column;\n    gap: 32px;\n    justify-content: center;\n    align-items: center;\n    padding-left: 24px;\n    padding-right: 24px;\n`\nexport const Image = styled.img`\n    min-width: 312px;\n    /* @media screen and (max-width: 767px) {\n       \n    } */\n    @media screen and (min-width: 1440px) {\n        min-width:240px ;\n        max-width: 240px;\n    }\n`\nexport const Hero = styled.img`\n    max-height: 104px;\n    max-width: 312px;\n    @media screen and (min-width: 1440px) {\n        display: none;\n    }\n`\nexport const ListItem = styled.li`\n    min-width: 312px;\n    box-shadow: 0px 1px 5px rgba(0, 0, 0, 0.2), 0px 3px 4px rgba(0, 0, 0, 0.12), 0px 2px 4px rgba(0, 0, 0, 0.14);\n    border-radius: 4px;\n    &:hover,:focus{\n        scale: 1.04;\n    }\n    @media screen and (min-width: 1440px) {\n        min-width:240px;\n    }\n` \nexport const DescriptionWrap = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    padding: 12px 16px;\n    gap: 10px;\n`\n\nexport const Name = styled.p`\n    color: rgba(0, 0, 0, 0.87);\n    font-family: 'Roboto';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 20px;\n    line-height: 30px;\n    letter-spacing: 0.15px;\n`\n\nexport const Species = styled.p`\n    color: rgba(0, 0, 0, 0.6);\n    font-family: 'Roboto';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 21px;\n    letter-spacing: 0.25px;\n`\n\nexport const LabelSearch = styled.label`\n    margin-left: auto;\n    margin-right: auto;\n\n    /* @media screen and (max-width: 767px) {\n        max-width: 312px;\n    } */\n    min-width: 312px;\n    display: inline-flex;\n    align-items: center;\n    padding: 16px;\n    border: 1px solid rgba(0, 0, 0, 0.5);\n    border-radius: 8px;\n\n    cursor: pointer;\n\n    @media screen and (min-width: 1440px) {\n        min-width:1020px ;\n    }\n`;\nexport const InputSearch = styled.input`\n    border: none;\n`\n\nexport const HeroDesctop = styled.img`\n    display: none;\n    @media screen and (min-width: 1440px) {\n        display: inline-flex;\n        min-height:200px;\n        min-width:500px;\n    }\n`","import { useEffect, useState } from \"react\";\nimport { getCharactersFetch } from \"servises/Fetch\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport mobile from '../../assets/mobile.png';\nimport desctop from '../../assets/desctop.png'\nimport { AiOutlineSearch } from \"react-icons/ai\";\nimport {\n    List,\n    Container,\n    Name,\n    Image,\n    Species,\n    Hero,\n    ListItem,\n    DescriptionWrap,\n    LabelSearch,\n    InputSearch,\n    HeroDesctop\n} from \"./Home.styled\";\n\n\n\n\nconst Home = () => {\n    const [episodes, setEpisodes] = useState([])\n    \n    const location = useLocation();\n    useEffect(() => {\n        getCharactersFetch().then(res => setEpisodes(res))\n    },[])\n    \n\n    const namesSort = [...episodes].sort((firstName, secondName) => firstName.name.localeCompare(secondName.name));\n\n    return (\n        \n        <main>\n            <Container>\n                <Hero\n                    src={mobile}\n                    alt=\"mobile\"\n                />\n                <HeroDesctop\n                    src={desctop}\n                    alt=\"desctop\"\n                />\n\n                <LabelSearch >\n                    <AiOutlineSearch size={22} />\n                    <InputSearch\n                        placeholder=\"Filter by name...\"\n                        type=\"text\"\n                        name=\"filter\"\n                    />\n                </LabelSearch>\n            {episodes.length > 0 ?\n                (<List>\n                    {namesSort.map(\n                        ({ id, name, species, image }) => \n                            \n                            <ListItem key={id}>\n                                <Link to={`${id}`} state={{ from: location }}>\n                                    <Image src={image} alt={name} />\n                                    <DescriptionWrap>\n                                        <Name>{name}</Name>\n                                        <Species>{species}</Species>\n                                    </DescriptionWrap>\n                                </Link>\n                            </ListItem>\n                        \n                    )}\n                    </List>) : <h3>Not found</h3>}\n                </Container>\n            </main>\n\n    )\n};\nexport default Home; ","import axios from \"axios\";\n// const BASE_URL = \"https://rickandmortyapi.com/api\"\n// const EPI_URL = \"https://rickandmortyapi.com/api/episode\"\n// axios.defaults.baseURL = \"https://rickandmortyapi.com/api/\";\n// \"https://rickandmortyapi.com/api/episode\"\n//  \"https://rickandmortyapi.com/api/character\"\n\nexport async function getCharactersFetch(page) {\n    try {\n        const response = await axios.get(\"https://rickandmortyapi.com/api/character\");\n        const episodes = await response.data.results\n        return episodes;\n    } catch (error) {\n        console.error(error);\n        return;\n    }\n}\n\nexport async function getOneCharacterId(id) {\n    try {\n        const response = await axios.get(`https://rickandmortyapi.com/api/character/${id}`);\n        \n        return response;\n    } catch (error) {\n        console.error(error);\n        return;\n    }\n}"],"names":["List","styled","Container","Image","Hero","ListItem","DescriptionWrap","Name","Species","LabelSearch","InputSearch","HeroDesctop","useState","episodes","setEpisodes","location","useLocation","useEffect","getCharactersFetch","then","res","namesSort","sort","firstName","secondName","name","localeCompare","src","mobile","alt","desctop","size","placeholder","type","length","map","id","species","image","to","state","from","page","axios","response","data","results","console","error","getOneCharacterId"],"sourceRoot":""}