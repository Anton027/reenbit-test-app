{"version":3,"file":"static/js/859.9e56c6ca.chunk.js","mappings":"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","sources":["pages/Home/Home.styled.js","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","components/ListCharacter/ListCharacter.styled.js","components/ListCharacter/ListCharacter.jsx","components/hooks/useLocalStorage.js","pages/Home/Home.jsx","servises/Fetch.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.section`\n    display: flex;\n    flex-direction: column;\n    gap: 32px;\n    justify-content: center;\n    align-items: center;\n    padding-left: 24px;\n    padding-right: 24px;\n`\n\nexport const Hero = styled.img`\n    max-height: 104px;\n    max-width: 312px;\n    @media screen and (min-width: 1440px) {\n        display: none;\n    }\n`\nexport const HeroDesctop = styled.img`\n    display: none;\n    @media screen and (min-width: 1440px) {\n        display: inline-flex;\n        min-height:200px;\n        min-width:500px;\n    }\n`\n\n\n","import styled from \"styled-components\";\n\nexport const LabelSearch = styled.label`\n    margin-left: auto;\n    margin-right: auto;\n\n    /* @media screen and (max-width: 767px) {\n        max-width: 312px;\n    } */\n    min-width: 312px;\n    display: inline-flex;\n    align-items: center;\n    padding: 16px;\n    border: 1px solid rgba(0, 0, 0, 0.5);\n    border-radius: 8px;\n\n    cursor: pointer;\n\n    @media screen and (min-width: 1440px) {\n        min-width:1020px ;\n    }\n`;\nexport const InputSearch = styled.input`\n    border: none;\n`\n","import { InputSearch, LabelSearch } from \"./SearchBox.styled\";\nimport { AiOutlineSearch } from \"react-icons/ai\";\n\nconst SearchBox = ({ value, onChange }) => { \n    return (\n        <LabelSearch>\n            <AiOutlineSearch size={22} />\n            <InputSearch\n                placeholder=\"Filter by name...\"\n                type=\"text\"\n                name=\"filter\"\n                value={value}\n                onChange={(e) => onChange(e.target.value)}\n            />\n        </LabelSearch>\n    )\n};\n\nexport default SearchBox;","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 24px;\n\n    @media screen and (min-width: 1440px) {\n        max-width: 1020px;\n        display: grid;\n        grid-template-columns: repeat(4, 1fr);\n        grid-template-rows: repeat(2, 1fr);\n        grid-column-gap: 20px;\n        grid-row-gap: 24px;\n    }\n`;\n\nexport const Image = styled.img`\n    min-width: 312px;\n    /* @media screen and (max-width: 767px) {\n       \n    } */\n    @media screen and (min-width: 1440px) {\n        min-width:240px ;\n        max-width: 240px;\n    }\n`\n\nexport const ListItem = styled.li`\n    min-width: 312px;\n    box-shadow: 0px 1px 5px rgba(0, 0, 0, 0.2), 0px 3px 4px rgba(0, 0, 0, 0.12), 0px 2px 4px rgba(0, 0, 0, 0.14);\n    border-radius: 4px;\n    &:hover,:focus{\n        scale: 1.04;\n    }\n    @media screen and (min-width: 1440px) {\n        min-width:240px;\n    }\n` \nexport const DescriptionWrap = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    padding: 12px 16px;\n    gap: 10px;\n`\n\nexport const Name = styled.p`\n    color: rgba(0, 0, 0, 0.87);\n    font-family: 'Roboto';\n    font-style: normal;\n    font-weight: 500;\n    font-size: 20px;\n    line-height: 30px;\n    letter-spacing: 0.15px;\n`\n\nexport const Species = styled.p`\n    color: rgba(0, 0, 0, 0.6);\n    font-family: 'Roboto';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 21px;\n    letter-spacing: 0.25px;\n`\n","\nimport { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport useLocalStorage from \"components/hooks/useLocalStorage\";\nimport {\n    List,\n    ListItem,\n    Image,\n    DescriptionWrap,\n    Species,\n    Name\n} from \"./ListCharacter.styled\";\n\nconst ListCharacter = ({ characters }) => {\n    const location = useLocation();\n    const [storageCharacters ] = useLocalStorage(\"characters\", characters);\n\n    return (\n        <List>\n                    {storageCharacters.map(\n                        ({ id, name, species, image }) => \n                            \n                            <ListItem key={id}>\n                                <Link to={`${id}`} state={{ from: location }}>\n                                    <Image src={image} alt={name} />\n                                    <DescriptionWrap>\n                                        <Name>{name}</Name>\n                                        <Species>{species}</Species>\n                                    </DescriptionWrap>\n                                </Link>\n                            </ListItem>\n                        \n                    )}\n        </List>\n    )    \n};\n\nexport default ListCharacter;","import { useState, useEffect } from \"react\";\n\nexport default function useLocalStorage(key, defaultValue) {\n    const [state, setState] = useState(() => {\n        return JSON.parse(window.localStorage.getItem(key))\n        ?? defaultValue\n    })\n    useEffect(() => {\n        window.localStorage.setItem(key, JSON.stringify(state))\n    },[state, key])\n\n    return [state, setState];\n}","import { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { getCharactersFetch } from \"servises/Fetch\";\nimport mobile from '../../assets/mobile.png';\nimport desctop from '../../assets/desctop.png'\nimport {\n    Container,\n    Hero,\n    HeroDesctop\n} from \"./Home.styled\";\nimport SearchBox from \"components/SearchBox/SearchBox\";\nimport ListCharacter from \"components/ListCharacter/ListCharacter\";\n\n\nconst Home = () => {\n    const [episodes, setEpisodes] = useState([])\n    const [searchParams, setSearchParams] = useSearchParams();\n    \n    useEffect(() => {\n        getCharactersFetch().then(res => setEpisodes(res))\n        \n    },[])\n    \n\n    const namesSort = [...episodes].sort((firstName, secondName) =>\n        firstName.name.localeCompare(secondName.name));\n\n    const characterName = searchParams.get(\"name\") ?? \"\";\n    const visibleEpisodes = namesSort.filter((episod) => \n        episod.name.toLowerCase().includes(characterName.toLowerCase())\n    )\n\n    const updateQueryString = (name) => {\n        const nextParams = name !== \"\" ? { name } : {};\n        setSearchParams(nextParams);\n    };\n\n    return (\n        \n        <main>\n            <Container>\n                <Hero\n                    src={mobile}\n                    alt=\"mobile\"\n                />\n                <HeroDesctop\n                    src={desctop}\n                    alt=\"desctop\"\n                />\n\n                <SearchBox value={characterName} onChange={updateQueryString}/>\n                {episodes.length > 0 ?\n                    <ListCharacter characters={visibleEpisodes} />\n                    : <h3>Not found</h3>\n                }\n            </Container>\n        </main>\n\n    )\n};\nexport default Home; \n","import axios from \"axios\";\n// const BASE_URL = \"https://rickandmortyapi.com/api\"\n// const EPI_URL = \"https://rickandmortyapi.com/api/episode\"\n// axios.defaults.baseURL = \"https://rickandmortyapi.com/api/\";\n// \"https://rickandmortyapi.com/api/episode\"\n//  \"https://rickandmortyapi.com/api/character\"\n\nexport async function getCharactersFetch(page) {\n    try {\n        const response = await axios.get(\"https://rickandmortyapi.com/api/character\");\n        const episodes = await response.data.results\n        return episodes;\n    } catch (error) {\n        console.error(error);\n        return;\n    }\n}\n\nexport async function getOneCharacterId(id) {\n    try {\n        const response = await axios.get(`https://rickandmortyapi.com/api/character/${id}`);\n        \n        return response;\n    } catch (error) {\n        console.error(error);\n        return;\n    }\n}"],"names":["Container","styled","Hero","HeroDesctop","LabelSearch","InputSearch","value","onChange","size","placeholder","type","name","e","target","List","Image","ListItem","DescriptionWrap","Name","Species","characters","location","useLocation","key","defaultValue","useState","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","storageCharacters","map","id","species","image","to","from","src","alt","episodes","setEpisodes","useSearchParams","searchParams","setSearchParams","getCharactersFetch","then","res","namesSort","sort","firstName","secondName","localeCompare","characterName","get","visibleEpisodes","filter","episod","toLowerCase","includes","mobile","desctop","length","page","axios","response","data","results","console","error","getOneCharacterId"],"sourceRoot":""}